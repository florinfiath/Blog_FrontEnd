{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Workspace/NoName-People/Backend/BackEndProjects/Blog/Frontend/blog/src/components/AddPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactQuill from \"react-quill\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios').default;\n\nconst AddPost = props => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const titleRef = useRef();\n  const contentRef = useRef();\n\n  const handleBody = e => {\n    console.log(e);\n    contentRef.current.value = e;\n  };\n\n  const setPost = async (postTitle, postContent) => {\n    try {\n      axios.post(\"http://localhost:3001/posts/\", {\n        title: postTitle,\n        content: postContent\n      }).then(response => {\n        props.sendGetRequest({\n          title\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const setPostOnClick = async () => {\n    setPost(titleRef.current.value, contentRef.current.value);\n    setTitle(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add a New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          id: \"addTitlePost\",\n          placeholder: \"Enter post title\",\n          ref: titleRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          className: \"border border-dark\",\n          placeholder: \"write something amazing...\",\n          modules: AddPost.modules,\n          formats: AddPost.formats,\n          onChange: handleBody,\n          ref: contentRef,\n          id: \"inputContent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/showPosts\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPostOnClick(),\n          type: \"button\",\n          className: \"btn btn-primary mt-5\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AddPost, \"Q/Z9y0hfI54p3DVyYKvYpQhbq1o=\");\n\n_c = AddPost;\nAddPost.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nAddPost.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["/home/dci/Desktop/Workspace/NoName-People/Backend/BackEndProjects/Blog/Frontend/blog/src/components/AddPost.js"],"names":["React","useRef","useState","Link","ReactQuill","axios","require","default","AddPost","props","title","setTitle","titleRef","contentRef","handleBody","e","console","log","current","value","setPost","postTitle","postContent","post","content","then","response","sendGetRequest","error","setPostOnClick","modules","formats","toolbar","header","font","size","list","indent"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactQuill from \"react-quill\";\n\nconst axios = require('axios').default;\n\n\n\nconst AddPost = (props) => {\n\n   const [title, setTitle] = useState(\"\")\n\n   const titleRef = useRef();\n   const contentRef = useRef();\n\nconst handleBody = (e) => {\n  console.log(e);\n  contentRef.current.value = e;\n};\n\nconst setPost = async (postTitle, postContent) => {\n  try{\n    axios\n    .post(\"http://localhost:3001/posts/\",{\n      title: postTitle,\n      content: postContent\n    })\n    .then((response) =>{\n      props.sendGetRequest({title})\n    })  \n} catch(error) {\n  console.log(error)\n}\n};\n\nconst setPostOnClick = async () => {\n  setPost(\n    titleRef.current.value,\n    contentRef.current.value\n  );\n  setTitle(\"\")\n};\n\n    return (\n      <div className=\"\">\n        <form>\n          <div class=\"form-group\">\n            <h3>Add a New Post</h3>\n            <p>Title:</p>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"addTitlePost\"\n              placeholder=\"Enter post title\"\n              ref={titleRef}\n            />\n          </div>\n          <div class=\"form-group\">\n            <p>Content:</p>\n            <ReactQuill\n              className=\"border border-dark\"\n              placeholder=\"write something amazing...\"\n              modules={AddPost.modules}\n              formats={AddPost.formats}\n              onChange={handleBody}\n              ref={contentRef}\n              id=\"inputContent\"\n            />\n          </div>\n           <Link to=\"/showPosts\">\n              <button\n                onClick={() => setPostOnClick()}\n                type=\"button\"\n                className=\"btn btn-primary mt-5\"\n              >Save\n              </button>\n              </Link>\n        </form>\n      </div>\n    );\n};\n\nAddPost.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nAddPost.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\n\nexport default AddPost;"]},"metadata":{},"sourceType":"module"}