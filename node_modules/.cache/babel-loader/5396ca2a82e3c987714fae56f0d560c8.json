{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Workspace/Blog/Frontend/blog/src/components/posts/showPosts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowPosts = props => {\n  _s();\n\n  const [posts, setPost] = useState({\n    show: false,\n    moviePreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\"\n  });\n\n  const handleClose = () => setPost({\n    show: false,\n    postPreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\"\n  });\n\n  const PostShow = (poster, title, type, year) => {\n    setPost({\n      show: true,\n      postPreview: poster,\n      title: title,\n      type: type\n    });\n  };\n\n  const addBtnFav = elm => {\n    props.addToFavorite(elm);\n  };\n\n  switch (props.data.status) {\n    case \"START\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n\n    case \"FAILED\":\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FAILED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n\n    case \"SUCCESS\":\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: props.data.data.map((elm, idx) => /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-3 mb-3\",\n            lg: \"3\",\n            md: \"4\",\n            sm: \"12\",\n            xs: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"m-auto\",\n              style: {\n                width: \"14rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                className: \"objectfit\",\n                variant: \"top\",\n                src: elm.Poster,\n                height: \"300\",\n                onClick: () => movieShow(elm.Poster, elm.Title, elm.Type, elm.Year)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"cardBodyColor\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  style: {\n                    height: \"2.2rem\"\n                  },\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      fontSize: \"14px\"\n                    },\n                    children: elm.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this), !props.favList.some(e => e.imdbID === elm.imdbID) ? /*#__PURE__*/_jsxDEV(BsIcons.BsFillStarFill, {\n                  style: {\n                    cursor: \"pointer\"\n                  },\n                  size: 25,\n                  onClick: () => {\n                    addBtnFav(elm);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(BsIcons.BsBookmarkCheck, {\n                  size: 25\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: post.show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            style: {\n              backgroundColor: \"#030617\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"modalImg\",\n              fluid: true,\n              src: post.postPreview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            className: \"cardBodyColor\",\n            children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Type: ${post.type}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            className: \"cardBodyColor\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"cardBodyColor m-auto\",\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return null;\n  }\n};\n\n_s(ShowPosts, \"I04m8TM2cF/L+pZHbNxP5v77ilM=\");\n\n_c = ShowPosts;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.movieResults,\n    favList: state.favoriteResults\n  };\n}; // const ShowPosts = (props) => {\n// return (\n// <Container>\n//   <div className=\"post-container pacifico-font pt-3\">\n//     <div className=\"btn-container mx-auto\">\n//       {props.show.map((post, index) => (\n//         <Link to={`/postDetails/${post._id}`}>\n//           <p key={index}>{post.title}</p>\n//         </Link>\n//       ))}\n//     </div>\n//   </div>\n// </Container>\n//);\n// };\n\n\nexport default ShowPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowPosts\");","map":{"version":3,"sources":["/home/dci/Desktop/Workspace/Blog/Frontend/blog/src/components/posts/showPosts.js"],"names":["React","Link","Col","Container","Row","ShowPosts","props","posts","setPost","useState","show","moviePreview","title","type","year","handleClose","postPreview","PostShow","poster","addBtnFav","elm","addToFavorite","data","status","map","idx","width","Poster","movieShow","Title","Type","Year","height","fontSize","favList","some","e","imdbID","cursor","post","backgroundColor","mapStateToProps","state","movieResults","favoriteResults"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\n\n\nconst ShowPosts = (props) => {\n  const [posts, setPost] = useState({\n    show: false,\n    moviePreview: \"\",\n    title: \"\",\n    type: \"\",\n    year: \"\",\n  });\n  const handleClose = () =>\n    setPost({\n      show: false,\n      postPreview: \"\",\n      title: \"\",\n      type: \"\",\n      year: \"\",\n    });\n  const PostShow = (poster, title, type, year) => {\n    setPost({\n      show: true,\n      postPreview: poster,\n      title: title,\n      type: type\n    });\n  };\n  const addBtnFav = (elm) => {\n    props.addToFavorite(elm);\n  };\n  switch (props.data.status) {\n    case \"START\":\n      return <h1>LOADING...</h1>;\n    case \"FAILED\":\n      return <h1>FAILED</h1>;\n    case \"SUCCESS\":\n      return (\n        <Container>\n          <Row>\n            {props.data.data.map((elm, idx) => (\n              <Col\n                key={idx}\n                className=\"mt-3 mb-3\"\n                lg=\"3\"\n                md=\"4\"\n                sm=\"12\"\n                xs=\"12\"\n              >\n                <Card className=\"m-auto\" style={{ width: \"14rem\" }}>\n                  <Card.Img\n                    className=\"objectfit\"\n                    variant=\"top\"\n                    src={elm.Poster}\n                    height=\"300\"\n                    onClick={() =>\n                      movieShow(elm.Poster, elm.Title, elm.Type, elm.Year)\n                    }\n                  />\n                  <Card.Body className=\"cardBodyColor\">\n                    <Card.Title\n                      style={{ height: \"2.2rem\" }}\n                      className=\"text-center\"\n                    >\n                      <p style={{ fontSize: \"14px\" }}>{elm.Title}</p>\n                    </Card.Title>\n                    {!props.favList.some((e) => e.imdbID === elm.imdbID) ? (\n                      <BsIcons.BsFillStarFill\n                        style={{ cursor: \"pointer\" }}\n                        size={25}\n                        onClick={() => {\n                          addBtnFav(elm);\n                        }}\n                      />\n                    ) : (\n                      <BsIcons.BsBookmarkCheck size={25} />\n                    )}\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n          <Modal show={post.show} onHide={handleClose}>\n            <Modal.Header style={{ backgroundColor: \"#030617\" }}>\n              <Image className=\"modalImg\" fluid src={post.postPreview} />\n            </Modal.Header>\n            <Modal.Body className=\"cardBodyColor\">\n              <Modal.Title>{post.title}</Modal.Title>\n              <p>{`Type: ${post.type}`}</p>\n            </Modal.Body>\n            <Modal.Footer className=\"cardBodyColor\">\n              <Button\n                className=\"cardBodyColor m-auto\"\n                variant=\"secondary\"\n                onClick={handleClose}\n              >\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Container>\n      );\n    default:\n      return null;\n  }\n};\nconst mapStateToProps = (state) => {\n  return {\n    data: state.movieResults,\n    favList: state.favoriteResults,\n  };\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const ShowPosts = (props) => {\n \n\n // return (\n    // <Container>\n    //   <div className=\"post-container pacifico-font pt-3\">\n    //     <div className=\"btn-container mx-auto\">\n    //       {props.show.map((post, index) => (\n    //         <Link to={`/postDetails/${post._id}`}>\n    //           <p key={index}>{post.title}</p>\n    //         </Link>\n    //       ))}\n    //     </div>\n    //   </div>\n    // </Container>\n\n   \n  //);\n// };\n     \n \n \n\n\n\nexport default ShowPosts;\n"]},"metadata":{},"sourceType":"module"}