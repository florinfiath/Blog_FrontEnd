{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Workspace/NoName-People/Backend/BackEndProjects/Blog/Frontend/blog/src/components/editPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst EditPost = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  useEffect(() => {\n    const foundPostToEdit = props.edit.find(post => post._id === id);\n\n    if (foundPostToEdit && id) {\n      console.log(foundPostToEdit);\n      setTitle(foundPostToEdit.title);\n      setContent(foundPostToEdit.content);\n    }\n  }, [id, props.edit]);\n\n  const handleBody = data => {\n    setContent(data);\n  };\n\n  const updateBlogs = async (title, content) => {\n    var data = {\n      title,\n      content\n    };\n\n    try {\n      axios.put(`http://localhost:3001/post/${id}`, data).then(res => {\n        props.sendGetRequest();\n        window.location.replace(\"/\");\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-1 addPost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              type: \"text\",\n              className: \"form-control border border-dark\",\n              id: \"inputTitle\",\n              border: true,\n              \"border-dark\": true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n              value: content,\n              className: \"border border-dark\",\n              placeholder: \"write something amazing...\",\n              modules: EditPost.modules,\n              formats: EditPost.formats,\n              onChange: handleBody,\n              id: \"inputContent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updateBlogs(title, content);\n            },\n            type: \"button\",\n            className: \"btn btn-primary mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPost, \"sJHa1UV4j3EIptGoybJd7bh2vZY=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nEditPost.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nEditPost.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\n/*\n * PropType validation\n */\n\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/home/dci/Desktop/Workspace/NoName-People/Backend/BackEndProjects/Blog/Frontend/blog/src/components/editPost.js"],"names":["React","useEffect","useState","ReactQuill","useParams","axios","require","default","EditPost","props","id","title","setTitle","content","setContent","foundPostToEdit","edit","find","post","_id","console","log","handleBody","data","updateBlogs","put","then","res","sendGetRequest","window","location","replace","error","e","target","value","modules","formats","toolbar","header","font","size","list","indent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport {  useParams } from \"react-router-dom\";\n\nconst axios = require(\"axios\").default;\n\nconst EditPost = (props) => {\n  const { id } = useParams();\n\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  \n\n  useEffect(() => {\n    const foundPostToEdit = props.edit.find((post) => post._id === id);\n\n    if (foundPostToEdit && id) {\n      console.log(foundPostToEdit);\n      setTitle(foundPostToEdit.title);\n      setContent(foundPostToEdit.content);\n    }\n  }, [id, props.edit]);\n\n  const handleBody = (data) => {\n    setContent(data);\n  };\n\n  const updateBlogs = async (title, content) => {\n \n    var data = {title, content };\n    try {\n      axios.put(`http://localhost:3001/post/${id}`, data).then((res) => {\n        props.sendGetRequest();\n        window.location.replace(\"/\");\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    console.log(data);\n  };\n\n\n  return (\n    <section className=\"section-1 addPost\">\n      <div className=\"main-container\">\n      \n        <div className=\"blog-form\">\n          <form>\n            <div className=\"form-group\">\n              <h3>Title</h3>\n              <input\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                type=\"text\"\n                className=\"form-control border border-dark\"\n                id=\"inputTitle\"\n                border\n                border-dark\n              />\n            </div>\n            <div className=\"form-group\">\n              <h3>Content</h3>\n              <ReactQuill\n                value={content}\n                className=\"border border-dark\"\n                placeholder=\"write something amazing...\"\n                modules={EditPost.modules}\n                formats={EditPost.formats}\n                onChange={handleBody}\n                id=\"inputContent\"\n              />\n            </div>\n\n            <button\n              onClick={() => {\n                updateBlogs(title, content);\n              }}\n              type=\"button\"\n              className=\"btn btn-primary mt-5\"\n            >\n              <h3>Save</h3>\n            </button>\n          </form>\n    \n        </div>\n        \n      </div>\n    </section>\n  );\n};\n\nEditPost.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nEditPost.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\n\n/*\n * PropType validation\n */\n\nexport default EditPost;\n\n"]},"metadata":{},"sourceType":"module"}