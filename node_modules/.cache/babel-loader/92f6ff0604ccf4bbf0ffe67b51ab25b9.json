{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Workspace/NoName-People/Backend/BackEndProjects/Blog/Frontend/blog/src/components/addPost.js\",\n    _s = $RefreshSig$();\n\n// import React, { useRef, useState } from 'react';\n// import { Link, useHistory} from 'react-router-dom';\n// import ReactQuill from \"react-quill\";\n// import \"../css/style.css\";\n// const axios = require('axios').default;\n// const AddPost = (props) => {\n//    const [title, setTitle] = useState(\"\");\n//    const [errors, setErrors] = useState(\"\");\n//    const titleRef = useRef();\n//    const contentRef = useRef();\n//    let history = useHistory();\n// const handleBody = (e) => {\n//   console.log(e);\n//   contentRef.current.value = e;\n// };\n// const setPost = async (postTitle, postContent) => {\n//   try{\n//     const response = await axios\n//     .post(\"http://localhost:3001/post/\",{\n//       title: postTitle,\n//       content: postContent\n//     })\n//      await props.sendGetRequest({title});\n//       console.log(\"response is :\" + JSON.stringify(response));\n// } catch(error) {\n//   console.log(error);\n//   throw(error);\n// }\n// };\n// const setPostOnClick = async () => {\n//   try{\n//     await setPost(\n//     titleRef.current.value,\n//     contentRef.current.value\n//   );\n//   setTitle(\"\");\n//   props.sendGetRequest();\n//   //history.push('./showPosts')\n//   }catch(error) {\n//     console.log(error.response.data);\n//     setErrors(error.response.data);\n//   }\n// };\n//     return (\n//       <div className=\"blog-form\">\n//         <div className=\"blog-form\">\n//           {errors && (\n//             <div className=\"errors\">\n//               <h1>There are some errors below:</h1> <br />\n//               {/* <pre> {JSON.stringify(errors, null, 2)}</pre> */}\n//               <ul>\n//                 {errors[\"errors\"]\n//                   .map((error) => Object.entries(error))\n//                   .map((element) => (\n//                     <li>\n//                       {element[0][0]} - {element[0][1]}\n//                     </li>\n//                   ))}\n//               </ul>\n//             </div>\n//           )}\n//         </div>\n//         {/* {errors\n//           ? errors\n//               .map((error) => Object.entries(error))\n//               .map((element) => (\n//                 <li key={Math.random()}>\n//                   {element[0][0]} - {element[0][1]}\n//                 </li>\n//               ))\n//           : console.log(\"no error\")} */}\n//         <form method=\"post\">\n//           <div class=\"form-group\">\n//             <h3>Add a New Post</h3>\n//             <p>Title:</p>\n//             <input\n//               type=\"text\"\n//               class=\"form-control\"\n//               id=\"addTitlePost\"\n//               placeholder=\"Enter post title\"\n//               ref={titleRef}\n//             />\n//           </div>\n//           <div class=\"form-group\">\n//             <p>Content:</p>\n//             <ReactQuill\n//               className=\"border border-dark\"\n//               placeholder=\"write something amazing...\"\n//               modules={AddPost.modules}\n//               formats={AddPost.formats}\n//               onChange={handleBody}\n//               ref={contentRef}\n//               id=\"inputContent\"\n//             />\n//           </div>\n//           <Link to=\"/\">\n//             <button\n//               onClick={() => {\n//                 setPostOnClick();\n//                 ;\n//               }}\n//               className=\"btn btn-primary mt-5\">\n//               Save\n//             </button>\n//           </Link>\n//         </form>\n//       </div>\n//     );\n// };\n// AddPost.modules = {\n//   toolbar: [\n//     [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n//     [{ size: [] }],\n//     [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n//     [\n//       { list: \"ordered\" },\n//       { list: \"bullet\" },\n//       { indent: \"-1\" },\n//       { indent: \"+1\" },\n//     ],\n//     [\"link\", \"image\", \"video\"],\n//     [\"clean\"],\n//   ],\n// };\n// /*\n//  * Quill editor formats\n//  * See https://quilljs.com/docs/formats/\n//  */\n// AddPost.formats = [\n//   \"header\",\n//   \"font\",\n//   \"size\",\n//   \"bold\",\n//   \"italic\",\n//   \"underline\",\n//   \"strike\",\n//   \"blockquote\",\n//   \"list\",\n//   \"bullet\",\n//   \"indent\",\n//   \"link\",\n//   \"image\",\n//   \"video\",\n// ];\n// export default AddPost;\nimport React, { useRef, useState } from \"react\";\nimport \"../css/style.css\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst AddPosts = props => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  let history = useHistory();\n  const inputTitleRef = useRef();\n  const inputContentRef = useRef();\n  const inputNameRef = useRef();\n\n  const handleBody = e => {\n    console.log(e);\n    inputContentRef.current.value = e;\n  };\n\n  const addPost = async (postTitle, postContent, postName) => {\n    console.log(\"add post log\" + postContent); // TODO\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/posts/\", {\n        title: postTitle,\n        content: postContent,\n        name: postName\n      });\n      await props.sendGetRequest({\n        title\n      });\n      console.log(\"response is :\" + JSON.stringify(response));\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n  const addPostsOnClick = async () => {\n    // console.log(inputContentRef.current);\n    try {\n      await addPost(inputTitleRef.current.value, inputContentRef.current.value, inputNameRef.current.value);\n      setTitle(\"\");\n      history.push(\"/showPosts\");\n    } catch (error) {\n      console.log(error.response.data);\n      setErrors(error.response.data);\n    } //  setContent(\"\");\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-1 addPost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"nav-list\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"nav-link\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/showPosts\",\n            className: \"nav-link\",\n            children: \"Blogs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/addPosts\",\n            className: \"nav-link\",\n            children: \"Write Blog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-form\",\n          children: [errors && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errors\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"There are some errors below:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 55\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: errors[\"errors\"].map(error => Object.entries(error)).map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [element[0][0], \" - \", element[0][1]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputTitle\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"please write your name over here...\",\n                ref: inputNameRef,\n                type: \"text\",\n                className: \"form-control border border-dark\",\n                id: \"inputTitle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputTitle\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: inputTitleRef,\n                type: \"text\",\n                className: \"form-control border border-dark\",\n                id: \"inputTitle\",\n                border: true,\n                \"border-dark\": true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputContent\",\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                className: \"border border-dark\",\n                placeholder: \"write something amazing...\",\n                modules: AddPosts.modules,\n                formats: AddPosts.formats,\n                onChange: handleBody,\n                ref: inputContentRef,\n                id: \"inputContent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addPostsOnClick(),\n              type: \"button\",\n              className: \"btn btn-primary mt-5 postButton\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imagesAddPost\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"../images/bg-post.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPosts, \"kQ2bC4Db85ODPZzm5sug8B0b0mQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddPosts;\nAddPosts.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nAddPosts.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\n/*\n * PropType validation\n */\n\nexport default AddPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPosts\");","map":{"version":3,"sources":["/home/dci/Desktop/Workspace/NoName-People/Backend/BackEndProjects/Blog/Frontend/blog/src/components/addPost.js"],"names":["React","useRef","useState","ReactQuill","Link","useHistory","axios","require","default","AddPosts","props","title","setTitle","errors","setErrors","history","inputTitleRef","inputContentRef","inputNameRef","handleBody","e","console","log","current","value","addPost","postTitle","postContent","postName","response","post","content","name","sendGetRequest","JSON","stringify","error","addPostsOnClick","push","data","map","Object","entries","element","modules","formats","toolbar","header","font","size","list","indent"],"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","sourcesContent":["// import React, { useRef, useState } from 'react';\n// import { Link, useHistory} from 'react-router-dom';\n// import ReactQuill from \"react-quill\";\n// import \"../css/style.css\";\n// const axios = require('axios').default;\n\n\n\n// const AddPost = (props) => {\n\n//    const [title, setTitle] = useState(\"\");\n//    const [errors, setErrors] = useState(\"\");\n\n//    const titleRef = useRef();\n//    const contentRef = useRef();\n//    let history = useHistory();\n\n// const handleBody = (e) => {\n//   console.log(e);\n//   contentRef.current.value = e;\n// };\n\n// const setPost = async (postTitle, postContent) => {\n//   try{\n//     const response = await axios\n//     .post(\"http://localhost:3001/post/\",{\n//       title: postTitle,\n//       content: postContent\n//     })\n//      await props.sendGetRequest({title});\n//       console.log(\"response is :\" + JSON.stringify(response));\n     \n// } catch(error) {\n//   console.log(error);\n//   throw(error);\n// }\n// };\n\n// const setPostOnClick = async () => {\n\n//   try{\n//     await setPost(\n//     titleRef.current.value,\n//     contentRef.current.value\n//   );\n//   setTitle(\"\");\n//   props.sendGetRequest();\n//   //history.push('./showPosts')\n//   }catch(error) {\n//     console.log(error.response.data);\n//     setErrors(error.response.data);\n//   }\n// };\n\n//     return (\n//       <div className=\"blog-form\">\n//         <div className=\"blog-form\">\n//           {errors && (\n//             <div className=\"errors\">\n//               <h1>There are some errors below:</h1> <br />\n//               {/* <pre> {JSON.stringify(errors, null, 2)}</pre> */}\n//               <ul>\n//                 {errors[\"errors\"]\n//                   .map((error) => Object.entries(error))\n//                   .map((element) => (\n//                     <li>\n//                       {element[0][0]} - {element[0][1]}\n//                     </li>\n//                   ))}\n//               </ul>\n//             </div>\n//           )}\n//         </div>\n//         {/* {errors\n//           ? errors\n//               .map((error) => Object.entries(error))\n//               .map((element) => (\n//                 <li key={Math.random()}>\n//                   {element[0][0]} - {element[0][1]}\n//                 </li>\n//               ))\n//           : console.log(\"no error\")} */}\n\n//         <form method=\"post\">\n//           <div class=\"form-group\">\n//             <h3>Add a New Post</h3>\n//             <p>Title:</p>\n//             <input\n//               type=\"text\"\n//               class=\"form-control\"\n//               id=\"addTitlePost\"\n//               placeholder=\"Enter post title\"\n//               ref={titleRef}\n//             />\n//           </div>\n//           <div class=\"form-group\">\n//             <p>Content:</p>\n//             <ReactQuill\n//               className=\"border border-dark\"\n//               placeholder=\"write something amazing...\"\n//               modules={AddPost.modules}\n//               formats={AddPost.formats}\n//               onChange={handleBody}\n//               ref={contentRef}\n//               id=\"inputContent\"\n//             />\n//           </div>\n//           <Link to=\"/\">\n//             <button\n//               onClick={() => {\n//                 setPostOnClick();\n//                 ;\n//               }}\n//               className=\"btn btn-primary mt-5\">\n//               Save\n//             </button>\n//           </Link>\n//         </form>\n//       </div>\n//     );\n// };\n\n// AddPost.modules = {\n//   toolbar: [\n//     [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n//     [{ size: [] }],\n//     [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n//     [\n//       { list: \"ordered\" },\n//       { list: \"bullet\" },\n//       { indent: \"-1\" },\n//       { indent: \"+1\" },\n//     ],\n//     [\"link\", \"image\", \"video\"],\n//     [\"clean\"],\n//   ],\n// };\n// /*\n//  * Quill editor formats\n//  * See https://quilljs.com/docs/formats/\n//  */\n// AddPost.formats = [\n//   \"header\",\n//   \"font\",\n//   \"size\",\n//   \"bold\",\n//   \"italic\",\n//   \"underline\",\n//   \"strike\",\n//   \"blockquote\",\n//   \"list\",\n//   \"bullet\",\n//   \"indent\",\n//   \"link\",\n//   \"image\",\n//   \"video\",\n// ];\n\n// export default AddPost;\n\n\n\n\nimport React, { useRef, useState } from \"react\";\nimport \"../css/style.css\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useHistory } from \"react-router-dom\";\nconst axios = require(\"axios\").default;\nconst AddPosts = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  let history = useHistory();\n  const inputTitleRef = useRef();\n  const inputContentRef = useRef();\n  const inputNameRef = useRef();\n  const handleBody = (e) => {\n    console.log(e);\n    inputContentRef.current.value = e;\n  };\n  const addPost = async (postTitle, postContent, postName) => {\n    console.log(\"add post log\" + postContent);\n    // TODO\n    try {\n      const response = await axios.post(\"http://localhost:3001/posts/\", {\n        title: postTitle,\n        content: postContent,\n        name: postName,\n      });\n      await props.sendGetRequest({ title });\n      console.log(\"response is :\" + JSON.stringify(response));\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n  const addPostsOnClick = async () => {\n    // console.log(inputContentRef.current);\n    try {\n      await addPost(\n        inputTitleRef.current.value,\n        inputContentRef.current.value,\n        inputNameRef.current.value\n      );\n      setTitle(\"\");\n      history.push(\"/showPosts\");\n    } catch (error) {\n      console.log(error.response.data);\n      setErrors(error.response.data);\n    }\n    //  setContent(\"\");\n  };\n  return (\n    <section className=\"section-1 addPost\">\n      <div className=\"main-container\">\n        <div className=\"navbar\">\n          <nav className=\"nav-list\">\n            <Link to=\"/\" className=\"nav-link\">\n              Home\n            </Link>\n            <Link to=\"/showPosts\" className=\"nav-link\">\n              Blogs\n            </Link>\n            <Link to=\"/addPosts\" className=\"nav-link\">\n              Write Blog\n            </Link>\n          </nav>\n        </div>\n        <>\n          <div className=\"blog-form\">\n            {errors && (\n              <div className=\"errors\">\n                <h1>There are some errors below:</h1> <br />\n                {/* <pre> {JSON.stringify(errors, null, 2)}</pre> */}\n                <ul>\n                  {errors[\"errors\"]\n                    .map((error) => Object.entries(error))\n                    .map((element) => (\n                      <li>\n                        {element[0][0]} - {element[0][1]}\n                      </li>\n                    ))}\n                </ul>\n              </div>\n            )}\n            <form>\n              <div className=\"form-group\">\n                <label for=\"inputTitle\">Name</label>\n                <input\n                  placeholder=\"please write your name over here...\"\n                  ref={inputNameRef}\n                  type=\"text\"\n                  className=\"form-control border border-dark\"\n                  id=\"inputTitle\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label for=\"inputTitle\">Title</label>\n                <input\n                  ref={inputTitleRef}\n                  type=\"text\"\n                  className=\"form-control border border-dark\"\n                  id=\"inputTitle\"\n                  border\n                  border-dark\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"inputContent\">Content</label>\n                <ReactQuill\n                  className=\"border border-dark\"\n                  placeholder=\"write something amazing...\"\n                  modules={AddPosts.modules}\n                  formats={AddPosts.formats}\n                  onChange={handleBody}\n                  ref={inputContentRef}\n                  id=\"inputContent\"\n                />\n              </div>\n              <button\n                onClick={() => addPostsOnClick()}\n                type=\"button\"\n                className=\"btn btn-primary mt-5 postButton\"\n              >\n                <h3>Save</h3>\n              </button>\n            </form>\n          </div>\n        </>\n        <div className=\"imagesAddPost\">\n          <img src=\"../images/bg-post.jpg\" />\n        </div>\n      </div>\n    </section>\n  );\n};\nAddPosts.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nAddPosts.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\n/*\n * PropType validation\n */\nexport default AddPosts;"]},"metadata":{},"sourceType":"module"}