{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/Workspace/NoName-People/Backend/BackEndProjects/Blog/Frontend/blog/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst EditPost = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const inputTitleRef = useRef();\n  useEffect(() => {\n    const foundPostToEdit = props.edit.find(post => post.id === id);\n\n    if (foundPostToEdit && id) {\n      console.log(foundPostToEdit);\n      setTitle(foundPostToEdit.title);\n      console.log(foundPostToEdit.content);\n    }\n  }, []);\n\n  const handleBody = data => {\n    setContent(data);\n  };\n\n  const titleValue = title => {\n    if (!title) {\n      const foundPostToEdit = props.edit.find(post => post.id === id);\n\n      if (foundPostToEdit) {\n        return foundPostToEdit.title;\n      }\n    } else {\n      return title;\n    }\n  };\n\n  const quillValue = quillContent => {\n    if (!quillContent) {\n      const foundPostToEdit = props.edit.find(post => post.id === id);\n\n      if (foundPostToEdit) {\n        return foundPostToEdit.content;\n      }\n    } else {\n      return quillContent;\n    }\n  };\n\n  const updateBlogs = async (id, title, content) => {\n    var data = {\n      id,\n      title,\n      content\n    };\n\n    try {\n      axios.post(\"http://localhost:3001/posts/update\", data).then(res => {\n        props.sendGetRequest();\n        window.location.replace(\"/ShowPosts\");\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-1 addPost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"logo-link\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/logo.png\",\n            alt: \"Logo\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputTitle\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: titleValue(title),\n              onChange: e => setTitle(e.target.value),\n              ref: inputTitleRef,\n              type: \"text\",\n              className: \"form-control border border-dark\",\n              id: \"inputTitle\",\n              border: true,\n              \"border-dark\": true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputContent\",\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n              value: quillValue(content),\n              className: \"border border-dark\",\n              placeholder: \"write something amazing...\",\n              modules: EditPost.modules,\n              formats: EditPost.formats,\n              onChange: handleBody,\n              id: \"inputContent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updateBlogs(id, title, content);\n            },\n            type: \"button\",\n            className: \"btn btn-primary mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPost, \"QdF6gIOWv7xuR3grRhqrghue43c=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nEditPost.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nEditPost.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\n/*\n * PropType validation\n */\n\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/home/dci/Desktop/Workspace/NoName-People/Backend/BackEndProjects/Blog/Frontend/blog/src/components/EditPost.js"],"names":["React","useEffect","useRef","useState","ReactQuill","Link","useParams","axios","require","default","EditPost","props","id","title","setTitle","content","setContent","inputTitleRef","foundPostToEdit","edit","find","post","console","log","handleBody","data","titleValue","quillValue","quillContent","updateBlogs","then","res","sendGetRequest","window","location","replace","error","e","target","value","modules","formats","toolbar","header","font","size","list","indent"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst axios = require(\"axios\").default;\n\nconst EditPost = (props) => {\n  const { id } = useParams();\n\n  \n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n\n  const inputTitleRef = useRef();\n  \n \n\n  useEffect(() => {\n    const foundPostToEdit = props.edit.find((post) => post.id === id);\n\n    if (foundPostToEdit && id) {\n      console.log(foundPostToEdit);\n      setTitle(foundPostToEdit.title);\n      console.log(foundPostToEdit.content);\n    }\n  }, []);\n\n  const handleBody = (data) => {\n    setContent(data);\n  };\n\n  const titleValue = (title) => {\n    if (!title) {\n      const foundPostToEdit = props.edit.find((post) => post.id === id);\n      if (foundPostToEdit) {\n        return foundPostToEdit.title;\n      }\n    } else {\n      return title;\n    }\n  };\n\n  const quillValue = (quillContent) => {\n    if (!quillContent) {\n      const foundPostToEdit = props.edit.find((post) => post.id === id);\n      if (foundPostToEdit) {\n        return foundPostToEdit.content;\n      }\n    } else {\n      return quillContent;\n    }\n  };\n\n  const updateBlogs = async (id, title, content) => {\n \n    var data = { id, title, content };\n    try {\n      axios.post(\"http://localhost:3001/posts/update\", data).then((res) => {\n        props.sendGetRequest();\n        window.location.replace(\"/ShowPosts\");\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    console.log(data);\n  };\n\n\n  return (\n    <section className=\"section-1 addPost\">\n      <div className=\"main-container\">\n        <div>\n          <Link className=\"logo-link\">\n            <img src=\"images/logo.png\" alt=\"Logo\" className=\"logo\" />\n          </Link>\n        </div>\n\n        <div className=\"blog-form\">\n          <form>\n            <div className=\"form-group\">\n              <label for=\"inputTitle\">Title</label>\n              <input\n                value={titleValue(title)}\n                onChange={(e) => setTitle(e.target.value)}\n                ref={inputTitleRef}\n                type=\"text\"\n                className=\"form-control border border-dark\"\n                id=\"inputTitle\"\n                border\n                border-dark\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"inputContent\">Content</label>\n              <ReactQuill\n                value={quillValue(content)}\n                className=\"border border-dark\"\n                placeholder=\"write something amazing...\"\n                modules={EditPost.modules}\n                formats={EditPost.formats}\n                onChange={handleBody}\n                id=\"inputContent\"\n              />\n            </div>\n\n            <button\n              onClick={() => {\n                updateBlogs(id, title, content);\n              }}\n              type=\"button\"\n              className=\"btn btn-primary mt-5\"\n            >\n              <h3>Save</h3>\n            </button>\n          </form>\n          )\n        </div>\n        \n      </div>\n    </section>\n  );\n};\n\nEditPost.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nEditPost.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\n\n/*\n * PropType validation\n */\n\nexport default EditPost;\n\n"]},"metadata":{},"sourceType":"module"}